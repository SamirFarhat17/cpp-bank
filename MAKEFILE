# Compiler and flags
CC = g++
CFLAGS = -Wall -g -std=c++11

# Configuration variables (can be overridden at build time)
NUM_CUSTOMERS ?= 500
NUM_TRANSACTIONS ?= 10000
FED_INTEREST_RATE ?= 435.000
NDEBUG ?= 0
CONCURRENCY ?= 0
TEST_MODE ?= 0

# Add configuration variables to CFLAGS
CFLAGS += -DNUM_CUSTOMERS=$(NUM_CUSTOMERS)
CFLAGS += -DNUM_TRANSACTIONS=$(NUM_TRANSACTIONS)
CFLAGS += -DFED_INTEREST_RATE=$(FED_INTEREST_RATE)

# Conditionally define NDEBUG and CONCURRENCY
ifeq ($(NDEBUG), 1)
    CFLAGS += -DNDEBUG
endif

ifeq ($(CONCURRENCY), 1)
    CFLAGS += -DCONCURRENCY
endif

ifeq ($(TEST_MODE), 1)
	CFLAGS += -DTEST_MODE
endif

# Executable and object files
EXEC = BankService.exe
OBJS = Main.o Bank.o Account.o Customer.o
RECORDS = records\Accounts\records.txt* records\Customers\records.txt* records\Transactions\records.txt* records\*.SUCCESS 

# Default target
all: $(EXEC)

# Link the executable
$(EXEC): $(OBJS)
	$(CC) $(CFLAGS) -o $(EXEC) $(OBJS)

# Object file rules
Main.o: Main.cpp
	$(CC) $(CFLAGS) -c Main.cpp

Bank.o: Bank/Bank.cpp Bank/Bank.h Bank/TransactionException.h
	$(CC) $(CFLAGS) -c Bank/Bank.cpp

Account.o: Accounts/Account.cpp Accounts/Account.h Transactions/Transaction.h
	$(CC) $(CFLAGS) -c Accounts/Account.cpp

Customer.o: Customers/Customer.cpp Customers/Customer.h Transactions/Transaction.h
	$(CC) $(CFLAGS) -c Customers/Customer.cpp

# Clean up build artifacts
clean:
	@echo "Cleaning build artifacts..."
	@if exist $(EXEC) del /Q $(EXEC) $(OBJS) $(RECORDS)
	@if exist $(EXEC) rm -f $(EXEC) $(OBJS) $(RECORDS)  
	@echo "Clean complete."

# Phony targets
.PHONY: all clean